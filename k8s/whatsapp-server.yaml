apiVersion: apps/v1
kind: Deployment
metadata:
  name: whatsapp-server-{{TENANT_ID}}
  labels:
    app: whatsapp-server
    tenant: "{{TENANT_ID}}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: whatsapp-server
      tenant: "{{TENANT_ID}}"
  template:
    metadata:
      labels:
        app: whatsapp-server
        tenant: "{{TENANT_ID}}"
    spec:
      hostNetwork: true                     # one Pod â†” one node, port 21465
      imagePullSecrets:
      - name: regcred                       # omit if you use public image
      initContainers:
      - name: notify-ready
        image: curlimages/curl:8.8.0
        env:
        - name: BACKEND_URL                 # e.g. https://api.myvisausa.com
          value: "{{BACKEND_URL}}"
        - name: TENANT_ID
          value: "{{TENANT_ID}}"
        - name: TENANT_TOKEN
          valueFrom:
            secretKeyRef:
              name: tenant-secret-{{TENANT_ID}}
              key: token
        command: ["/bin/sh","-c"]
        args:
        - |
          until nc -z localhost 21465; do sleep 2; done
          curl -s -X POST "$BACKEND_URL/tenant/ready" \
               -H "Authorization: Bearer $TENANT_TOKEN" \
               -H "Content-Type: application/json" \
               -d "{\"tenantId\":\"$TENANT_ID\",\"ip\":\"$(hostname -i)\",\"port\":21465}"
      containers:
      - name: whatsapp
        image: "{{WHATSAPP_IMAGE_URI}}"     # e.g. 123456789012.dkr.ecr.us-east-1.amazonaws.com/whatsapp:latest
        ports:
        - containerPort: 21465
        env:
        - name: NODE_ENV
          value: production
        - name: TENANT_ID
          value: "{{TENANT_ID}}"
        - name: TENANT_TOKEN
          valueFrom:
            secretKeyRef:
              name: tenant-secret-{{TENANT_ID}}
              key: token